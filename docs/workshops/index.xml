<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://compuvisualhipermegared.github.io/vc/docs/workshops/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://compuvisualhipermegared.github.io/vc/docs/workshops/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://compuvisualhipermegared.github.io/vc/docs/workshops/optical_illusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://compuvisualhipermegared.github.io/vc/docs/workshops/optical_illusions/</guid><description>Ilusiones ópticas # Propósito # Comprender algunos aspectos fundamentales de la inferencia inconsciente de la percepción visual y sus posibles aplicaciones.
Tareas # Realizar una indagación teórico-práctica de las ilusiones visuales, al menos una por cada integrante del grupo y plantear una posible aplicación práctica.
Entrega # Plazo para hacer push del repositorio a github: 10/11/21 y 16/11/21 a las 24h, grupos 2 y 1 respectivamente.</description></item><item><title/><link>https://compuvisualhipermegared.github.io/vc/docs/workshops/rendering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://compuvisualhipermegared.github.io/vc/docs/workshops/rendering/</guid><description>Algoritmo de rasterización: Algoritmo de Bresenham # El algoritmo de Bresenham determina los puntos requeridos para rasterizar una aproximación línea recta. El algoritmo parte de restringir la línea a un solo píxel por columna o fila. Si la restricción se aplica horizontal o verticalmente, depende de la pendiente de la línea trazada. A partir de esta restricción, y teniendo en cuenta los puntos de comienzo y final de la línea, se calculan las coordenadas irrestrictas de los puntos, aproximándose al entero más cercano.</description></item></channel></rss>